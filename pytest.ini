[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Coverage configuration
addopts = 
    --verbose
    --cov=lazyscan
    --cov-report=xml:reports/coverage.xml
    --cov-report=html:reports/coverage_html
    --cov-report=term-missing
    --cov-fail-under=80
    --tb=short
    --strict-markers

# Custom test markers for layered testing
markers =
    unit: Unit tests for individual modules and functions
    integration: Integration tests for inter-module workflows
    e2e: End-to-end tests for complete user workflows
    slow: Tests that take longer than 30 seconds to run
    safe: Tests that don't touch the real filesystem (use pyfakefs)
    platform_specific: Tests that only run on specific platforms
    requires_unity: Tests that require Unity Hub projects
    requires_unreal: Tests that require Unreal Engine projects
    requires_chrome: Tests that require Chrome browser profiles
    deletion: Tests involving file deletion operations
    backup: Tests involving backup creation and recovery
    performance: Performance benchmark tests

# Minimum Python version
minversion = 3.9

# Ignore specific warnings during test runs
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:pyfakefs.*

# Configure test discovery patterns
norecursedirs = .git .tox dist build *.egg venv .venv

# Pytest timeout configuration
timeout = 300
timeout_method = thread