name: Lint & Format

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

# Cancel in-progress workflows for the same branch
concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

env:
  # Ensure colorized output
  FORCE_COLOR: 1
  PY_COLORS: 1

jobs:
  lint-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    # Skip draft PRs unless explicitly requested
    if: github.event.pull_request.draft == false || github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for better diff context
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Use stable version for linting
          cache: 'pip'

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt

      - name: Run pre-commit hooks
        run: |
          pre-commit run --all-files --show-diff-on-failure

      - name: Check for security issues with bandit
        run: |
          bandit -r lazyscan helpers -f json -o bandit-report.json || true
          bandit -r lazyscan helpers -f txt

      - name: Upload bandit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-security-report
          path: bandit-report.json
          retention-days: 30

      - name: Run mypy type checking
        run: |
          mypy lazyscan helpers --config-file mypy.ini || true

      - name: Check import sorting with isort
        run: |
          python -m pip install isort
          isort --check-only --diff lazyscan helpers tests

      - name: Lint with ruff (detailed)
        run: |
          echo "::group::Ruff Linting Results"
          ruff check lazyscan helpers tests --output-format=github
          echo "::endgroup::"

      - name: Check formatting with black
        run: |
          echo "::group::Black Formatting Check"
          black --check --diff --color lazyscan helpers tests
          echo "::endgroup::"

      - name: Check ruff formatting
        run: |
          echo "::group::Ruff Format Check"
          ruff format --check --diff lazyscan helpers tests
          echo "::endgroup::"

  lint-matrix:
    name: Lint on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install ruff and black
        run: |
          python -m pip install --upgrade pip
          pip install ruff black

      - name: Lint with ruff
        run: |
          ruff check lazyscan helpers tests --output-format=text

      - name: Check formatting with black
        run: |
          black --check lazyscan helpers tests

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit[toml] safety pip-audit

      - name: Run bandit security scan
        run: |
          bandit -r lazyscan helpers -f json -o bandit-report.json
          bandit -r lazyscan helpers

      - name: Run safety check
        run: |
          # Create requirements file for safety check
          pip freeze > requirements-freeze.txt
          safety check --file requirements-freeze.txt --output json --output-file safety-report.json || true
          safety check --file requirements-freeze.txt

      - name: Run pip-audit
        run: |
          pip-audit --desc --output=json --output-file=pip-audit-report.json || true
          pip-audit --desc

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
            pip-audit-report.json
          retention-days: 30

  comment-pr:
    name: Comment on PR
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (failure() || success())
    needs: [lint-format, lint-matrix, security-scan]

    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ needs.lint-format.result }}' === 'success' &&
                          '${{ needs.lint-matrix.result }}' === 'success' &&
                          '${{ needs.security-scan.result }}' === 'success' ? '‚úÖ' : '‚ùå';

            const body = `## Lint & Format Results ${status}

            | Check | Status |
            |-------|--------|
            | Lint & Format | ${{ needs.lint-format.result }} |
            | Multi-Python Lint | ${{ needs.lint-matrix.result }} |
            | Security Scan | ${{ needs.security-scan.result }} |

            ${status === '‚ùå' ? '‚ö†Ô∏è Please fix the linting issues before merging.' : 'üéâ All checks passed!'}

            ---
            *Automated comment by GitHub Actions*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
